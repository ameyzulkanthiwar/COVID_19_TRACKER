{"version":3,"sources":["images/corona_image.jpg","components/Cards/Cards.module.css","components/Cards/Card.jsx","api/index.js","components/Chart/Chart.jsx","components/Error/Error.jsx","components/Footer/Footer.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/404-error.jpg","components/Error/Error.module.css","components/Footer/Footer.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","card","infected","CardContent","Typography","variant","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","loading","CircularProgress","url","fetchData","country","a","changableUrl","axios","get","Error","error","code","message","fetchDailyData","map","date","reportDate","total","centuries","response","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","src","ErrorImage","errorImage","alt","Footer","containers","href","CountryPicker","handleCountry","fetchCountry","setFetchCountry","selectValue","setSelectValue","countries","FormControl","formControl","Select","defaultValue","onChange","e","target","MenuItem","length","res","index","key","name","App","setData","setCountry","isLoading","setIsLoading","isError","setIsError","getFetchedData","fetchedData","coronaImage","image","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38de3be0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona_image.3abb128c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__kJZ-b\",\"card\":\"Cards_card__18QJU\",\"infected\":\"Cards_infected__3d_-C\",\"recovered\":\"Cards_recovered__2HK--\",\"deaths\":\"Cards_deaths__1Owjv\",\"loading\":\"Cards_loading__2z_v7\"};","import React from \"react\";\r\nimport { Card, Grid, Typography, CardContent, CircularProgress } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport className from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return (\r\n            <div className={styles.loading}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                {/* Break point */}\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={className(styles.card, styles.infected)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            {/* NOTE: Bellow syntax is equivalent to this syntax{confirmed.value && confirmed.value} */}\r\n                            {/* confirmed?.value */}\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed?.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={className(styles.card, styles.recovered)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered?.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of recovered cases from COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={className(styles.card, styles.deaths)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths?.value} duration={1.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>{\" \"}\r\n                        <Typography color=\"textSecondary\">REAL DATE</Typography>\r\n                        <Typography variant=\"body2\"> Number of deaths due to COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changableUrl = url;\r\n    if (country) {\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        // Destructuring\r\n        const {\r\n            data: { confirmed, recovered, deaths, lastUpdate }\r\n        } = await axios.get(changableUrl);\r\n\r\n        // We are just taking part of the data that we need\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        };\r\n    } catch (error) {\r\n        throw new Error({ error: { code: \"404\", message: \"The page could not be found\" } });\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n            confirmed: confirmed.total,\r\n            deaths: deaths.total,\r\n            date\r\n        }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const centuries = async () => {\r\n    try {\r\n        const response = await axios.get(`${url}/countries`);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const data = await fetchDailyData();\r\n            setDailyData(data);\r\n        };\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const barChart = confirmed ? (\r\n        <Bar\r\n            data={{\r\n                labels: [\"Infacted\", \"Recovered\", \"Deaths\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"People\",\r\n                        backgroundColor: [\"blue\", \"green\", \"red\"],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }\r\n                ]\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` }\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    const lineChart = dailyData[0] ? (\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: \"Infected\",\r\n                        borderColor: \"#3333ff\",\r\n                        fill: true\r\n                    },\r\n                    {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: \"Deaths\",\r\n                        borderColor: \"red\",\r\n                        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n                        fill: true\r\n                    }\r\n                ]\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    return <div className={styles.container}>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport ErrorImage from \"../../images/404-error.jpg\";\r\nimport styles from \"./Error.module.css\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <img src={ErrorImage} className={styles.errorImage} alt=\"Error\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\nimport className from \"classnames\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className={className(styles.containers)}>\r\n                <div>\r\n                    <h3>\r\n                        Developed by\r\n                        <a href=\"https://ameyzulkanthiwar.netlify.com\"> Amey Zulkanthiwar</a>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { centuries } from \"../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountry }) => {\r\n    const [fetchCountry, setFetchCountry] = useState([]);\r\n    const [selectValue, setSelectValue] = useState(\"global\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await centuries();\r\n            setFetchCountry(data.countries);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <Select\r\n                defaultValue=\"Global\"\r\n                value={selectValue}\r\n                onChange={(e) => {\r\n                    setSelectValue(e.target.value);\r\n                    handleCountry(e.target.value);\r\n                }}\r\n            >\r\n                <MenuItem value=\"global\">Global</MenuItem>\r\n                {fetchCountry &&\r\n                    fetchCountry.length > 0 &&\r\n                    fetchCountry.map((res, index) => {\r\n                        return (\r\n                            <MenuItem key={`${res.name}_${index}`} value={res.name}>\r\n                                {res.name}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n// importing all the component like this is a hassle\r\n// import Cards from \"./components/Cards/Card\";\r\n// import Chart from \"./components/Chart/Chart\";\r\n// import CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\n\r\n// Cleaner way to import the component\r\nimport { Cards, Chart, CountryPicker, Error, Footer } from \"./components\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { fetchData } from \"./api\";\r\nimport coronaImage from \"./images/corona_image.jpg\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({});\r\n    const [country, setCountry] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const fetchedData = async () => {\r\n                const getFetchedData = await fetchData();\r\n                setData(getFetchedData);\r\n                setIsLoading(false);\r\n                setIsError(false);\r\n            };\r\n            fetchedData();\r\n        } catch (error) {\r\n            setIsError(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleCountry = async (country) => {\r\n        let fetchedData;\r\n        if (country === \"global\") {\r\n            fetchedData = await fetchData();\r\n            setData(fetchedData);\r\n            setCountry(\"\");\r\n        } else {\r\n            fetchedData = await fetchData(country);\r\n            setData(fetchedData);\r\n            setCountry(country);\r\n        }\r\n    };\r\n\r\n    if (isError) {\r\n        return <Error />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img src={coronaImage} className={styles.image} alt=\"COVID-19\" />\r\n            {!isError && isLoading ? (\r\n                <div className={styles.loading}>\r\n                    <CircularProgress />\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            ) : (\r\n                <div className={styles.container}>\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountry={handleCountry} country={country} />\r\n                    <Chart data={data} country={country} />\r\n                </div>\r\n            )}\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1zBL_\",\"image\":\"App_image__2024z\",\"loading\":\"App_loading__XvzqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__NawFe\"};","module.exports = __webpack_public_path__ + \"static/media/404-error.168156e5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorImage\":\"Error_errorImage__cME9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containers\":\"Footer_containers__1OYGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__32bWY\"};"],"sourceRoot":""}